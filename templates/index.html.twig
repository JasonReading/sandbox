<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>RXJS Demo</title>
    <script src="https://unpkg.com/@reactivex/rxjs@5.0.0/dist/global/Rx.js"></script>
</head>
<body>
<form>
    <input type="text" id="field"/>

    <ul id="results"></ul>
</form>


<script>
    function searchNames(term) {
        return Rx.Observable.fromPromise(fetch('/person?name=' + encodeURIComponent(term)));
    }

    var $input = document.getElementById('field'),
        $results = document.getElementById('results');

    // Get all distinct key up events from the input and only fire if long enough and distinct
    var keyup = Rx.Observable.fromEvent($input, 'keyup')
        .map(function (e) {
            return e.target.value; // Project the text from the input
        })
        // .filter(function (text) {
        //     console.log(text);
        //     return text.length > 2; // Only if the text is longer than 2 characters
        // })
        // .debounce(20 /* Pause for 750ms */)
        .distinctUntilChanged(); // Only if the value has changed

    var searcher = keyup
        .switchMap(searchNames)
        .switchMap(a => Rx.Observable.fromPromise(a.json()));

    var results = document.getElementById('results');


    searcher.subscribe(
        function (data) {
            console.log(data);
            results.innerHTML = '<li>'+data.suggestions.join('</li><li>')+'</li>';
            // $results
            //     .empty()
            //     .append($.map(data[1], function (v) {
            //         return $('<li>').text(v);
            //     }));
        },
        function (error) {
            // $results
            //     .empty()
            //     .append($('<li>'))
            //     .text('Error:' + error);
        });


</script>
</body>
</html>